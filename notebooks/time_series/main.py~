#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Feb  9 21:43:50 2017

@author: gsgarbi
"""
"""inputs:  bparam = st(d=18, m=7, y=2016)
            
"""

import signal

#signal.pause()


import os

import time

import numpy as np


import signal
from contextlib import contextmanager

from runariane import runariane as runariane






from shutil import copyfile

import datetime as dt


inp = np.loadtxt("/home/gsgarbi/analysis-giorgio/notebooks/time_series/inp.txt", delimiter = ' ')

values = [int(x) for x in inp]
       
keys = ["year", "month", "day", "tlength", "length"]

date_input = dict(zip(keys, values))

first_date = dt.datetime(
                 year = date_input["year"], 
                 month = date_input["month"], 
                 day = date_input["day"]
                 )

tlength = date_input["tlength"] 

length = date_input["length"] 







from createdirs import createdirs
from createnl import nl
from create_inpos import initp
from linkvel import link as link
from catch_error import catch_error as catch_error

from runarianet import run_example as run_example

from runarianet import runariane as runarianet


    
    
T = 30 * tlength + 5 #estimated time
    
    

def main(first_date, tlength):
    
    
    
    dirs = createdirs(first_date)
    

    
    arianedir = dirs["arianedir"]
    

    
    resultsdir = dirs["resultsdir"]
    
    errordir = dirs["errordir"]
    

    

    nl(arianedir, tlength)
    
    initp(arianedir)
    
    link(tlength, first_date, arianedir)
    
    ex_dir = "/home/gsgarbi/analysis-giorgio/arianefiles/2016/07/18"
    
    nl(ex_dir, tlength)
    

    
    
    t = runarianet (arianedir, resultsdir, T)
    
    if t == T:
        error = True
    else:
        error = False
        
    
 
    if os.path.getsize(resultsdir + "/traj.txt") == 0:
        error = True
    
    if not error:
        with open(errordir + "/noerror.txt", 'w') as file:
            file.write(" no error :) ") 
         
        
    if error:

        ferrormsg = {"day" : first_date, "runtime": t, "executed": dt.datetime.now()}
        errormsg = "Error encountered for file {day}, run time {runtime}, on {executed}"
        "with initial_positions.txt and namelist files in this folder,"
        "(Error provided by the author, not Ariane.) "
        
    if error:
        with open(errordir + "/errormessage.txt", 'w') as file:
            file.write(errormsg.format(**ferrormsg)) 
            
    src = arianedir + "/traj.txt"

    dst = resultsdir + "/traj.txt"

    copyfile(src, dst)
    
    if error:
    
        dst = errordir + "/traj.txt"
        copyfile(src, dst)
    
    
    
    
    
    src = arianedir + "/namelist"

    dst = resultsdir + "/namelist"

    copyfile(src, dst)
    
    
    if error:
        dst = errordir + "/namelist"
        copyfile(src, dst)
    
    
    
    src = arianedir + "/initial_positions.txt"

    dst = resultsdir + "/initial_positions.txt"

    copyfile(src, dst)
    
    if error:
        dst = errordir + "/initial_positions.txt"
        copyfile(src, dst)
    
    fdate = '{:%Y/%m/%d}'.format(first_date)

    return (fdate, "error: {}".format(error), t)
    
    
    

    

#if __name__ == "__main__":
#    main(first_date, tlength)
    
def runlength (length):
    
    

    
    infos = []
    for i in range(length):
        first_date = dt.datetime(
                 year = date_input["year"], 
                 month = date_input["month"], 
                 day = date_input["day"] + i
                 )
        info = main(first_date, tlength)
        
        infos.append(info)
 
        print ("---------------------------------------")
    
    for i in infos:
        
        print ("xxxxxxxxxxxxxxx",
               i,
               "xxxxxxxxxxxxxxx")
        

     
if __name__ == "__main__":
    runlength(length)
        




